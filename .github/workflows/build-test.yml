name: Eevees-Retreat Build and Test

on:
  push:
    branches:
      - main

permissions:
  contents: read
  security-events: write

# jobs:
#   ESLintCheck:
#     name: ESLint Check
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       ##########################
#       #    ESLint Check        #
#       ##########################
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install frontend dependencies
#         working-directory: frontend/Hotel-booking-application
#         run: npm install

#       - name: Run ESLint
#         working-directory: frontend/Hotel-booking-application
#         run: npm run lint

#       - name: Run FrontEnd
#         working-directory: frontend/Hotel-booking-application
#         run: nohup npm run dev -- --host 0.0.0.0 & sleep 10

#   BackendTest:
#     needs: ESLintCheck
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Java
#         uses: actions/setup-java@v3
#         with:
#           distribution: "temurin"
#           java-version: "17"

#       - name: Install Maven dependencies
#         working-directory: backend/HotelBookingApplication
#         run: mvn install -DskipTests=true

#       - name: Install Node.js for Frontend
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install Frontend Dependencies
#         working-directory: frontend/Hotel-booking-application
#         run: npm install

#       - name: Start Frontend App
#         working-directory: frontend/Hotel-booking-application
#         run: |
#           nohup npm run dev -- --host 127.0.0.1 --port 5173 > frontend.log 2>&1 &
#           sleep 5

#       - name: Wait for Frontend to be Ready
#         run: |
#           for i in {1..5}; do
#             curl -sSf http://127.0.0.1:5173 && break
#             echo "Waiting for frontend..."
#             sleep 5
#           done

#       - name: Run Unit Tests (Backend)
#         working-directory: backend/HotelBookingApplication
#         run: mvn test -Dgroups="!selenium"

#       - name: Run Selenium E2E Tests
#         working-directory: backend/HotelBookingApplication
#         run: mvn test -Dgroups="selenium"


jobs:
  # 1. Lint and Run React app
  FrontendBuild:
    name: Frontend Build & Smoke Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: frontend/Hotel-booking-application
        run: npm install

      - name: Run ESLint
        working-directory: frontend/Hotel-booking-application
        run: npm run lint

      - name: Start Frontend App
        working-directory: frontend/Hotel-booking-application
        run: |
          nohup npm run dev -- --host 127.0.0.1 --port 5173 > frontend.log 2>&1 &
          sleep 10

      - name: Smoke Check
        run: curl -sSf http://127.0.0.1:5173

  # 2. SAST CodeQL Static Analysis
  # StaticAnalysis:
  #   name: SAST CodeQL Analysis
  #   runs-on: ubuntu-latest
  #   needs: FrontendBuild

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: java

  #     - name: Build backend for CodeQL
  #       working-directory: backend/HotelBookingApplication
  #       run: mvn clean install -DskipTests=true

  #     - name: Run CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
        
  SASTScan:
    name: OWASP SAST Scan (Semgrep â†’ SARIF)
    needs: FrontendBuild
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep Scan to SARIF
        run: |
          semgrep scan \
            --config auto \
            --sarif \
            --output semgrep-report.sarif \
            .

      - name: Upload Semgrep SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-report.sarif
          checkout_path: .
        
      - name: Upload Semgrep SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep-report.sarif

  # # 3. OWASP Dependency-Check
  # DependencyCheck:
  #   name: OWASP Dependency-Check
  #   runs-on: ubuntu-latest
  #   needs: FrontendBuild

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: temurin
  #         java-version: "17"

  #     - name: Run Dependency-Check
  #       working-directory: backend/HotelBookingApplication
  #       run: |
  #         mvn org.owasp:dependency-check-maven:check \
  #           -Ddependency-check.failBuildOnCVSS=7 \
  #           -Dformats=ALL

  #     - name: Upload Dependency-Check report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dependency-check-report
  #         path: backend/HotelBookingApplication/target/dependency-check-report.*

  # 4. OWASP ZAP (dynamic scan against both frontend+backend)
  SecurityScan:
    name: OWASP ZAP Full Scan
    runs-on: ubuntu-latest
    needs: FrontendBuild

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start Backend
        working-directory: backend/HotelBookingApplication
        run: |
          nohup mvn spring-boot:run > zap-backend.log 2>&1 &
          sleep 20

      - name: Start Frontend (reuse build)
        working-directory: frontend/Hotel-booking-application
        run: |
          # assuming already running from FrontendBuild; or restart if needed
          curl -sSf http://127.0.0.1:5173

      - name: Run ZAP full scan
        uses: zaproxy/action-full-scan@v0.6.0
        with:
          target: 'http://127.0.0.1:8080'
          cmd_options: '-t http://127.0.0.1:8080 -r zap-report.html'

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html

  # 5. Backend Maven install > unit & e2e
  BackendTest:
    name: Backend Test Suite
    runs-on: ubuntu-latest
    needs:
      # - DependencyCheck
      - SecurityScan

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install Maven dependencies
        working-directory: backend/HotelBookingApplication
        run: mvn install -DskipTests=true

      - name: Run Unit Tests (Backend)
        working-directory: backend/HotelBookingApplication
        run: mvn test -Dgroups="!selenium"

      - name: Run Selenium E2E Tests
        working-directory: backend/HotelBookingApplication
        run: mvn test -Dgroups="selenium"