name: Eevees-Retreat Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      ##########################
      #  Phase 1: ESLint Check  #
      ##########################
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: frontend/Hotel-booking-application
        run: npm install

      - name: Run ESLint
        working-directory: frontend/Hotel-booking-application
        run: npm run lint

      - name: Run FrontEnd
        working-directory: frontend/Hotel-booking-application
        run: npm run dev

      ####################################
      # Backend Unit Tests Phase (Java)
      ####################################

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install Maven dependencies
        working-directory: backend/HotelBookingApplication
        run: mvn install -DskipTests=true

      - name: Install Chrome for Selenium
        run: sudo apt-get update && sudo apt-get install -y google-chrome-stable

      - name: Run Unit Tests (Backend)
        working-directory: backend/HotelBookingApplication
        run: mvn test

      - name: Run Selenium E2E Tests
        working-directory: backend/HotelBookingApplication
        run: mvn test -Dgroups="selenium"

      ################################
      # Phase 3: Build and Deploy    #
      ################################
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: eevees_retreat_app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/eevees_retreat_app:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
